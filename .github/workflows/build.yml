name: Build

on:
  push:
    branches: ['main']

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install # change this to npm or pnpm depending on which one you use.

      - name: Build (Tauri)
        uses: tauri-apps/tauri-action@v0
        with:
          includeDebug: true

      - uses: actions/upload-artifact@v3
        name: Upload bundles
        with:
          name: wavebreaker-installer ${{ matrix.platform }}
          path: |
           ${{ github.workspace }}/src-tauri/target/**/bundle/**/*.app
           ${{ github.workspace }}/src-tauri/target/**/bundle/**/*.msi
           ${{ github.workspace }}/src-tauri/target/**/bundle/**/*.AppImage

      - uses: actions/upload-artifact@v3
        if: matrix.platform == 'windows-latest'
        name: Upload Windows standalone (release)
        with:
          name: wavebreaker-installer-release.exe
          path: ${{ github.workspace }}/src-tauri/target/release/wavebreaker-installer.exe

      - uses: actions/upload-artifact@v3
        if: matrix.platform == 'windows-latest'
        name: Upload Windows standalone (debug)
        with:
          name: wavebreaker-installer-debug.exe
          path: ${{ github.workspace }}/src-tauri/target/debug/wavebreaker-installer.exe
